# Generated by Django 5.0.3 on 2024-03-19 09:31

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('AccountId', models.AutoField(primary_key=True, serialize=False)),
                ('AccountName', models.TextField(max_length=12, validators=[django.core.validators.RegexValidator('^[\\w\\d]+$'), django.core.validators.MinLengthValidator(6)])),
                ('Password', models.TextField(max_length=12, validators=[django.core.validators.RegexValidator('^[\\w\\d!"#$%&\\\'()*+,-./:;<=>?@[\\\\]^_`{|}~]*$'), django.core.validators.MinLengthValidator(6)])),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('AuthorId', models.AutoField(primary_key=True, serialize=False)),
                ('AuthorName', models.TextField(max_length=255)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='BookType',
            fields=[
                ('BookTypeId', models.AutoField(primary_key=True, serialize=False)),
                ('BookTypeName', models.TextField(max_length=255)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Consumer',
            fields=[
                ('ConsumerId', models.AutoField(primary_key=True, serialize=False)),
                ('Name', models.TextField(max_length=255, validators=[django.core.validators.RegexValidator('^[\\w\\d\\s]+$')])),
                ('Address', models.TextField(max_length=255, validators=[django.core.validators.RegexValidator('^[\\w\\d\\s!"#$%&\\\'()*+,-./:;<=>?@[\\\\]^_`{|}~]*$')])),
                ('Phone', models.TextField(max_length=11, validators=[django.core.validators.RegexValidator('(84|0[3|5|7|8|9])+([0-9]{8})\\b')])),
                ('Email', models.EmailField(blank=True, max_length=320, null=True)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Parameter',
            fields=[
                ('ParameterName', models.TextField(primary_key=True, serialize=False)),
                ('Value', models.FloatField()),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Storage',
            fields=[
                ('StorageId', models.AutoField(primary_key=True, serialize=False)),
                ('Date', models.DateField(default=django.utils.timezone.now)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('BookId', models.AutoField(primary_key=True, serialize=False)),
                ('BookName', models.TextField(max_length=255)),
                ('Quantity', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('AuthorId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookstore.author')),
                ('BookTypeId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookstore.booktype')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('OrderId', models.AutoField(primary_key=True, serialize=False)),
                ('Date', models.DateField(default=django.utils.timezone.now)),
                ('TotalValue', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('PaidValue', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('RemainingValue', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('ConsumerId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookstore.consumer')),
            ],
        ),
        migrations.CreateModel(
            name='BookOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date', models.DateField(default=django.utils.timezone.now)),
                ('Quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('UnitSoldPrice', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('BookId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookstore.book')),
                ('OrderId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookstore.order')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('PaymentId', models.AutoField(primary_key=True, serialize=False)),
                ('Date', models.DateField(default=django.utils.timezone.now)),
                ('Value', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('ConsumerId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookstore.consumer')),
            ],
        ),
        migrations.CreateModel(
            name='BookStorage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date', models.DateField(default=django.utils.timezone.now)),
                ('Quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('UnitPrice', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('BookId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookstore.book')),
                ('StorageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookstore.storage')),
            ],
        ),
    ]
